openapi: 3.0.0
info:
  title: FitFlow API
  description: API para autenticación, usuarios, ejercicios y chat AI.
  version: 1.0.0

servers:
  - url: http://localhost:8000/api

paths:
  /auth/register:
    post:
      summary: Registrar nuevo usuario
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Usuario creado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSuccessResponse'
        '400':
          description: Error en registro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
                
  /auth/login:
    post:
      summary: Iniciar sesión
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Usuario autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSuccessResponse'
        '400':
          description: Credenciales incorrectas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
                
  /auth/me:
    get:
      summary: Obtener información del usuario actual
      tags: [Auth]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Perfil de usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSuccessResponse'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
                
  /auth/logout:
    post:
      summary: Cerrar sesión
      tags: [Auth]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Sesión cerrada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /users:
    get:
      summary: Obtener todos los usuarios
      tags: [Users]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorResponse'
                
  /users/{id}:
    get:
      summary: Obtener un usuario por ID
      tags: [Users]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del usuario
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorResponse'
    put:
      summary: Actualizar un usuario
      tags: [Users]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: Usuario actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSuccessResponse'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorResponse'
    delete:
      summary: Eliminar un usuario
      tags: [Users]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del usuario
      responses:
        '200':
          description: Usuario eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorResponse'
                
  /exercises:
    get:
      summary: Obtener todos los ejercicios
      tags: [Exercises]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de ejercicios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExercisesResponse'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseErrorResponse'
                
  /exercises/{id}:
    get:
      summary: Obtener un ejercicio por ID
      tags: [Exercises]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del ejercicio
      responses:
        '200':
          description: Ejercicio encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseResponse'
        '404':
          description: Ejercicio no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseErrorResponse'
    delete:
      summary: Eliminar relación ejercicio-usuario
      tags: [Exercises]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del ejercicio
      responses:
        '200':
          description: Relación eliminada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Ejercicio no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseErrorResponse'
                
  /chat:
    post:
      summary: Enviar mensaje al agente IA
      tags: [Chat]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      responses:
        '200':
          description: Respuesta del agente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
        '400':
          description: Error al procesar el mensaje
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatErrorResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    BaseResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Operación completada con éxito"
          
    RegisterRequest:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
          example: "usuario123"
        email:
          type: string
          example: "usuario@example.com"
        password:
          type: string
          example: "Contraseña123"

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          example: "usuario@example.com"
        password:
          type: string
          example: "Contraseña123"

    User:
      type: object
      properties:
        _id:
          type: string
          example: "6095c27b8e147a001c8f2a5d"
        username:
          type: string
          example: "usuario123"
        email:
          type: string
          example: "usuario@example.com"

    AuthUser:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            token:
              type: string
              example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

    AuthSuccessResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            user:
              $ref: '#/components/schemas/AuthUser'

    AuthErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Credenciales incorrectas"

    UpdateUserRequest:
      type: object
      properties:
        username:
          type: string
          example: "nuevoNombre"
        email:
          type: string
          example: "nuevo@email.com"
        password:
          type: string
          example: "NuevaContraseña123"

    UserSuccessResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            user:
              $ref: '#/components/schemas/User'

    UsersResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            users:
              type: array
              items:
                $ref: '#/components/schemas/User'

    UserErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Usuario no encontrado"

    Exercise:
      type: object
      properties:
        _id:
          type: string
          example: "60c72b2f9f1b2c001c8a35b6"
        name:
          type: string
          example: "Push-up"
        muscleGroup:
          type: string
          example: "Pectorals"
        equipment:
          type: string
          example: "None"
        difficulty:
          type: string
          example: "Medium"
        description:
          type: string
          example: "An upper body exercise for chest muscles."
        addedAt:
          type: string
          format: date-time
          example: "2023-01-01T12:00:00Z"

    ExerciseResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            exercise:
              $ref: '#/components/schemas/Exercise'

    ExercisesResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            exercises:
              type: array
              items:
                $ref: '#/components/schemas/Exercise'

    ExerciseErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Error al recuperar ejercicios"

    ChatRequest:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: "Recomienda ejercicios para fortalecer los biceps."

    ChatResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            response:
              type: string
              example: "Para fortalecer los brazos, te recomiendo los siguientes ejercicios..."
            exercises:
              type: array
              items:
                $ref: '#/components/schemas/Exercise'
              description: "Lista de ejercicios sugeridos (si los hay)"

    ChatErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Error al procesar el mensaje"